{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"bash",
				"bash_completion"
			],
			[
				"clu",
				"cloudpath"
			],
			[
				"LOC",
				"LOCAL_SITE"
			],
			[
				"DROP",
				"DROPBOX"
			],
			[
				"GOO",
				"GOOGLE_DRIVE_RELATIVE"
			],
			[
				"anch",
				"anchor_cloud_dir"
			],
			[
				"serv",
				"service_relpath"
			],
			[
				"service",
				"service_home"
			],
			[
				"DROPB",
				"DROPBOX_HOME"
			],
			[
				"PATH",
				"PATH_PRIORITY_ASC"
			],
			[
				"exp",
				"export_to_frame"
			],
			[
				"delete",
				"delete_on_return"
			],
			[
				"filename",
				"filename_generated"
			],
			[
				"use",
				"use_funcname"
			],
			[
				"US",
				"USR_ROOT_RELATIVE"
			],
			[
				"mas",
				"master_hosts"
			],
			[
				"us",
				"usr_hosts"
			],
			[
				"usr",
				"usr_ipaddrs"
			],
			[
				"sor",
				"sort_by_time"
			],
			[
				"mak",
				"make_ranks"
			],
			[
				"backu",
				"backup_file"
			],
			[
				"bac",
				"backup_dir"
			],
			[
				"Lor",
				"LoreIcons__Properties"
			]
		]
	},
	"buffers":
	[
		{
			"file": "setup-eyrie.bash",
			"settings":
			{
				"buffer_size": 10728,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					347,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADmDAAAAAAAAOYMAAAAAAAAAAAAAAAA8L8"
				],
				[
					348,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADmDAAAAAAAAOYMAAAAAAAAAAAAAAAA8L8"
				],
				[
					349,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADmDAAAAAAAAOYMAAAAAAAAAAAAAAAA8L8"
				],
				[
					350,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADmDAAAAAAAAOYMAAAAAAAAAAAAAAAA8L8"
				],
				[
					351,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADmDAAAAAAAAOYMAAAAAAAAAAAAAAAA8L8"
				],
				[
					352,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAC0KQAAIyEvYmluL2Jhc2gKCnNob3B0IC1zIGV4dGdsb2IKCmRlY2xhcmUgSEVSRT0iJChjZCAiJChkaXJuYW1lICIkQkFTSF9TT1VSQ0UiKSI7cHdkO2NkIC0gJj4vZGV2L251bGwpIgpidWlsdGluIHNvdXJjZSAiJEhFUkUiL3NldHVwLmNvbmZpZwoKaWYgW1sgLWYgfi8uZXlyaWVyYyBdXTsgdGhlbgogICAgYnVpbHRpbiBzb3VyY2Ugfi8uZXlyaWVyYwpmaQoKIyBUT0RPOiBuZWVkIHRvIGNoZWNrIFBSSU1BUllfQ0xPVUQgYW5kIElOXyogdG8gZmluZCAuLi4vc2hhcmUKZGVjbGFyZSBTSEFSRT0iJChjZCAiJEhFUkUiLy4uL3NoYXJlO3B3ZDtjZCAtICY+L2Rldi9udWxsKSIKYnVpbHRpbiBzb3VyY2UgIiRTSEFSRSIvc2hsaWIvc2hsaWItYmFzaWMtY2xpLmJhc2gKCmRlY2xhcmUgLWEgc3VwcG9ydGVkX2Nsb3Vkcz0oIERyb3Bib3ggRHJpdmUgaUNsb3VkICkKIyMjICBQQVRIQ09OU1RBTlRTICAjIyMKCiMgUGF0aCBjb21wb25lbnRzIC8gaW1wb3J0YW50IHRva2VucwpkZWNsYXJlIC1yIFVTUj0iJHtVU1JfUkVMQVRJVkU6K3Vzcn0iCmRlY2xhcmUgLXIgTE9DQUw9IiR7TE9DQUxfUkVMQVRJVkU6K2xvY2FsfSIKCmRlY2xhcmUgLXIgRFJJVkU9RHJpdmUKZGVjbGFyZSAtciBEUk9QQk9YPURyb3Bib3gKZGVjbGFyZSAtciBJQ0xPVUQ9aUNsb3VkCgpkZWNsYXJlIC1yIERSSVZFX0FCUz0iJERSSVZFX0hPTUUvJERSSVZFX1JFTEFUSVZFIgpkZWNsYXJlIC1yIERST1BCT1hfQUJTPSIkRFJPUEJPWF9IT01FLyREUk9QQk9YX1JFTEFUSVZFIgpkZWNsYXJlIC1yIElDTE9VRF9BQlM9IiRJQ0xPVURfSE9NRS8kSUNMT1VEX1JFTEFUSVZFIgoKCmRlY2xhcmUgLXIgQU5DSE9SPS5fCgojIEFic29sdXRlIFBhdGhzCmRlY2xhcmUgLXIgVVNSX0FCUz0iJEhPTUUvJFVTUiIKZGVjbGFyZSAtciBMT0NBTF9BQlM9IiRVU1JfQUJTLyRMT0NBTF9SRUxBVElWRSIKCiMgS2V5IExvY2F0aW9ucwpkZWNsYXJlIC1yIExPQ0FMX0NPTkZJR19CQUNLVVA9IiRMT0NBTC9ldGMvb3JpZ2luYWwiCmRlY2xhcmUgLXIgTE9DQUxfQ1BBTl9CQUNLVVA9IiRVU1IvdmFyL2NwYW4vb3JpZ2luYWwiCgojIyBUT0RPOiB2YWxpZGF0ZSB0aGVzZSBhcyB3ZWxsIC4uLgojIEdPT0dMRV9EUklWRV9SRUxBVElWRQojIERST1BCT1hfUkVMQVRJVkUKIyBHT09HTEVfRFJJVkVfSE9NRQojIERST1BCT1hfSE9NRQoKIyBMaXN0cwoKZGVjbGFyZSAtYSBGSFNfTElOS0VEPSggYmluIGV0YyBob21lIGxpYiBvcHQgc2JpbiBzaGFyZSApCmRlY2xhcmUgLWEgUEFUSF9QUklPUklUWV9BU0M9KCAkKGVjaG8gIiRVU1Iieywve2FyY2gsc2l0ZXssL2FyY2h9LGxvY2FsfX0pICkKZGVjbGFyZSAtYSBGSFNfQ09OQ1JFVEU9KCB2YXIvY3BhbiAkKGNvbXBnZW4gLVAgIiRMT0NBTCIvIC1XICJ2YXIgJHtGSFNfTElOS0VEWypdfSIpICkKZGVjbGFyZSAtYSBHTE9CQUxfUEFUSF9QUklPUklUWV9BU0M9KCAiIiAvdXNyIC91c3IvbG9jYWwgJChjb21wZ2VuIC1QICIkSE9NRSIvIC1XICIke1BBVEhfUFJJT1JJVFlfQVNDWypdfSIpICkKZGVjbGFyZSAtYSBBUkdTPSgiJEAiKQoKZXhwb3J0IC1mIHJ1bl9pZl9wcmVzZW50CmV4cG9ydCAtZiByZXBvcnQgcmVwb3J0ZApleHBvcnQgLWYgZ2V0X2Rpc3BsYXlfcGF0aAoKZXhwb3J0IC1mIGRlc3ltCmV4cG9ydCAtZiBub3JtYWxpemUKCmV4cG9ydCAtZiBsaW5rX3RvCgpEKCkgewogICAgWyAtbiAiJF9TRVRVUF9ERUJVRyIgLWEgIiRfU0VUVVBfREVCVUciICE9IDAgXSAmJiBlY2hvICIkQCI+JjI7Cn0gOyBleHBvcnQgLWYgRAoKZm9yIGFyZyBpbiAiJEAiOyBkbwogICAgaWYgW1sgIiRhcmciID1+IF4oLXZ8LS12ZXJib3NlKSQgXV07IHRoZW4KICAgICAgICBleHBvcnQgX1ZFUkJPU0U9MQogICAgZWxpZiBbWyAiJGFyZyIgPX4gXigtLWRlYnVnKSQgXV07IHRoZW4KICAgICAgICBlY2hvICJGT09CSUUgQkxFVENIIiA+JjIKICAgICAgICBleHBvcnQgX1NFVFVQX0RFQlVHPTEKICAgIGZpCmRvbmUKCgoKOjw8J1ByZWNlZGVuY2VfTUQnCgojIEdlbmVyYWwgSGllcmFyY2hpZXMgb2YgUHJlY2VkZW5jZQoKKCB+L3VzciA9PSBFeXJpZSByb290ICkKCiAgICB+CiAgICB+L3Vzci9sb2NhbAogICAgfi91c3Ivc2l0ZS9hcmNoCiAgICB+L3Vzci9zaXRlCiAgICB+L3Vzci9hcmNoCiAgICB+L3VzcgogICAgL3Vzci9sb2NhbAogICAgL3Vzci9zaXRlCiAgICAvdXNyCiAgICAvCgojIyBFeHBlY3RlZCBIaWVyYXJjaGljYWwgUHJvY2Vzc2luZyBQYXR0ZXJucwoKMS4gRkhTIEluaGVyaXRhbmNlLgoKVGhlIGVmZmVjdGl2ZSBjb25maWcgPSBhIGxheWVyaW5nIG9mIGFsbCB2aXNpYmxlIGNvbmZpZ3MgZm9sbG93aW5nIEZIUyBvcmRlcjogIm1vc3Qgc3BlY2lmaWMgY29tcG9zaXRlZCIKCmV4YW1wbGU6IGAuZ2l0Y29uZmlnYAoKMi4gQW5jZXN0cmFsIEluaGVyaXRhbmNlCgpUaGUgZWZmZWN0aXZlIGNvbmZpZyA9IGEgbGF5ZXJpbmcgb2YgYWxsIHZpc2libGUgY29uZmlncyBpbiB0aGUgZGlyZWN0b3J5IHBhdGgtdG8tcm9vdDogIm1pbmUgKyBwYXJlbnQncyArIGdyYW5kcGFyZW50J3MgKyAuLi4iCgpleGFtcGxlOiBgLnA0Y29uZmlnYAoKCgojIyBTcGVjaWZpYyBIYW5kbGluZyBmb3IgdmFyaW91cyBzdWJzeXN0ZW1zCgpDb25zaWRlcmluZyB0aGUgRkhTLCB0aGVyZSBhcmUgc2V2ZXJhbCBleHBlY3RlZCBwcmVjZWRlbmNlLW9yZGVyIGJlaGF2aW9ycy4KCmV0YwoKICAgIH4vLiogKHVzdWFsbHkgc3ltbGlua2VkIHRvIH4vdXNyey4uLn0vZXRjLyopCiAgICB+L3Vzci9sb2NhbC9ldGMKICAgIH4vdXNyL3NpdGUvYXJjaC9ldGMKICAgIH4vdXNyL3NpdGUvZXRjCiAgICB+L3Vzci9hcmNoL2V0YwogICAgfi91c3IvZXRjCgpQQVRICgogICAgfi9zYmluCiAgICB+L2JpbgogICAgfi91c3IvbG9jYWwvc2JpbgogICAgfi91c3IvbG9jYWwvYmluCiAgICB+L3Vzci9zaXRlL2FyY2gvc2JpbgogICAgfi91c3Ivc2l0ZS9hcmNoL2JpbgogICAgfi91c3Ivc2l0ZS9zYmluCiAgICB+L3Vzci9zaXRlL2JpbgogICAgfi91c3IvYXJjaC9zYmluCiAgICB+L3Vzci9hcmNoL2JpbgogICAgfi91c3Ivc2JpbgogICAgfi91c3IvYmluCiAgICAvdXNyL2xvY2FsL3NiaW4KICAgIC91c3IvbG9jYWwvYmluCiAgICAvdXNyL3NiaW4KICAgIC91c3IvYmluCiAgICAvc2JpbgogICAgL2JpbgoKClByZWNlZGVuY2VfTUQKCgoKCgoKICMjIyMjIyMjIyMjIyMjIyMjIyMvCiMjIyMjIyMjIyMjIyMjIyMjIyMvCiMjIwojIyMgIEJlZ2luIENvbmZpZ3VyYXRpb24KIyMjCiMjIyMjIyMjIyMjIyMjIy8KICMjIyMjIyMjIyMjIyMvCgppZiBbWyAtciAiJEhPTUUiLy5leXJpZS1zZXR1cHJjIF1dOyB0aGVuCiAgICBidWlsdGluIHNvdXJjZSAiJEhPTUUiLy5leXJpZS1zZXR1cHJjCmZpCgppZiBbWyAteiAiJEVZUklFX1NJVEUiIC1hIC1uICIkREVURUNURURfU0lURSIgXV07IHRoZW4KICAgIEQgIkRFVEVDVEVEX1NJVEU9JERFVEVDVEVEX1NJVEUiCiAgICBkZWNsYXJlIEVZUklFX1NJVEU9IiRERVRFQ1RFRF9TSVRFIgpmaQoKI1RPRE86ICpjb3JyZWN0bHkqLypyb2J1c3RseSogZGV0ZXJtaW5lIHdoZXRoZXIgZHJvcGJveCBpcyBpbnN0YWxsZWQgJiBydW5uaW5nCgojIGlmIGZhbHNlOyB0aGVuCiMgaWYgd2hpY2ggZHJvcGJveDsgdGhlbgojICAgICB1bnRpbCBkcm9wYm94IHJ1bm5pbmc7IGRvCiMgICAgICAgICByZXBvcnQgZXJyb3IgImRyb3Bib3ggY29tbWFuZGxpbmUgdXRpbCBmb3VuZCwgYnV0IG5vIGRyb3Bib3ggc2VydmljZSBpcyBydW5uaW5nISIKIyAgICAgICAgIGV4aXQgMQojICAgICBkb25lCiMgZWxpZiB3aGljaCBkcm9wYm94LnB5OyB0aGVuCiMgICAgIHVudGlsIGRyb3Bib3gucHkgcnVubmluZzsgZG8KIyAgICAgICAgIHJlcG9ydCBlcnJvciAiZHJvcGJveC5weSBmb3VuZCwgYnV0IG5vIGRyb3Bib3ggc2VydmljZSBpcyBydW5uaW5nISIKIyAgICAgICAgIGV4aXQgMQojICAgICBkb25lCiMgZWxzZQojICAgICByZXBvcnQgd2FybiAiQ291bGRuJ3QgZmluZCBEcm9wYm94IGluIFwkUEFUSDsgY2F1dGlvdXNseSBjb250aW51aW5nLiIKIyBmaQojIGZpCgojVE9ETzogZGV0ZXJtaW5lIHdoZXRoZXIgR29vZ2xlIERyaXZlIGlzIG5lZWRlZCAvIGluc3RhbGxlZCAvIHJ1bm5pbmcKCiMgc2V0LXVwIGFyY2ggYW5kIHNpdGUgZGlyZWN0b3JpZXMKb3M9JCh1bmFtZSAtcyB8IGF3ayAne3ByaW50IHRvbG93ZXIoJDApfScpCmlmIFtbICRvcyA9PSBkYXJ3aW4gXV07IHRoZW4KICAgIHRydWUgOyAjIG5vdGhpbmcgc3BlY2lhbCB0byBkbyB5ZXQKZWxpZiBbWyAkb3MgPT0gbGludXggXV07IHRoZW4KICAgIGlmIFtbICIkKHVuYW1lIC1hKSIgPX4gW1V1XWJ1bnR1fFtEZF1lYmlhbiBdXTsgdGhlbgogICAgICAgIG9zPWRlYmlhbgogICAgZWxzZQogICAgICAgIHJlcG9ydCB3YXJuICJEb24ndCByZWNvZ25pemUgdGhpcyBmbGF2b3Igb2YgTGludXggKFwiJCh1bmFtZSAtYSlcIikgYXMgb25lIHdlIHN1cHBvcnQsIGJ1dCBob3BpbmcgZm9yIHRoZSBiZXN0IC4uLiIKICAgICAgICBvcz1kZWJpYW4KICAgIGZpCmVsaWYgW1sgJG9zID09IGN5Z3dpbiBdXTsgdGhlbgogICAgcmVwb3J0IHdhcm4gIldvdyEgQ3lnd2luPyBPcHRpbWlzdGljLCBidXQgb2theSwgd2UnbGwgdHJ5IC4uLiIgPiYyCmVsaWYgW1sgJG9zID09IHdpbjMyIHx8ICRvcyA9PSBtaW5ndzMyIF1dOyB0aGVuCiAgICAjIE5vcGUuCiAgICByZXBvcnQgZXJyb3IgIlwiJG9zXCIgaXMgbm90IHN1cHBvcnRlZC4gVGFrZSBhIGxvb2sgYXQgXCIkQkFTSF9TT1VSQ0VcIiBmb3IgZGV0YWlscy4gIiA+JjIKICAgIGV4aXQgMgplbHNlICMgdW5yZWNvZ25pemVkIE9TIC4uLgogICAgcmVwb3J0IGVycm9yICJEb24ndCByZWNvZ25pemUgT1MgXCIkb3NcIiAuLi4gY293YXJkbHkgcmVmdXNpbmcgdG8gY29udGludWUuIgogICAgZXhpdCAyCmZpCgpyZXBvcnQgaW5mbyAidXNpbmcgb3M9XCIkb3NcIiIKCiMgdGhpcyBpcyB0aGUgZGVmYXVsdDsgd2UnbGwgY29uc2lkZXIgcmVmaW5pbmcgaXQgbGF0ZXIgb24KYXJjaD0kb3MKCiNUT0RPOiBjbG91ZCByb290IHJlbGF0aXZlIHBvc2l0aW9uIG5lZWRzIHRvIGJlIGNvbmZpZ3VyYWJsZS4gTmVlZCBzb21lIHNvcnQgb2Ygc2VsZWN0aXZlLXN5bmMgY29uZmlnLiBQcm9iYWJseSB1c2UgLmV5cmllLXNldHVwcmMKCmRlY2xhcmUgLWEgdXNlZF9jbG91ZHM9KCAkUFJJTUFSWV9DTE9VRCApCmZvciBjbG91ZCBpbiAiJHtzdXBwb3J0ZWRfY2xvdWRzW0BdfSI7IGRvCiAgICBEICJpZGVudGlmeWluZyBkaXJzIGhvc3RlZCBpbiAkY2xvdWQiCiAgICB1Y2Nsb3VkPSIkKHVjICRjbG91ZCkiCiAgICBpZiBpc3NldCBJTl8ke3VjY2xvdWR9OyB0aGVuCiAgICAgICAgRCAiJChkZWNsYXJlIC1wIElOXyR1Y2Nsb3VkKSIKICAgICAgICB1c2VkX2Nsb3Vkcys9KCAkY2xvdWQgKQogICAgICAgIHVuc2V0IF9JTl9UTVAKICAgICAgICBpZiBjb3B5X3ZhciBJTl8ke3VjY2xvdWR9IF9JTl9UTVA7IHRoZW4KICAgICAgICAgICAgIyBEICIkKGRlY2xhcmUgLXAgX0lOX1RNUCkiCiAgICAgICAgICAgIGZvciBkaXIgaW4gIiR7X0lOX1RNUFtAXX0iOyBkbwogICAgICAgICAgICAgICAgZGVjbGFyZSBfSU5fJHt1Y2Nsb3VkfV8kZGlyCiAgICAgICAgICAgIGRvbmUKICAgICAgICBlbHNlCiAgICAgICAgICAgIHJlcG9ydCB3YXJuICJwcm9ibGVtIGFsbG9jYXRpbmcgZGlycyB2aWEgSU5fJHt1Y2Nsb3VkfTsgc2tpcHBpbmcuIgogICAgICAgIGZpCiAgICBlbGlmIFsgJGNsb3VkID0gJFBSSU1BUllfQ0xPVUQgXTsgdGhlbgogICAgICAgIEQgIiQoZGVjbGFyZSAtcCBjbG91ZCkiCiAgICAgICAgY29weV92YXIgIiR7dWNjbG91ZH1fQUJTIiBjbG91ZHBhdGgKICAgICAgICBmb3IgZGlyIGluICRvcyAkREVURUNURURfU0lURTsgZG8KICAgICAgICAgICAgaWYgWyAtZCAiJGNsb3VkcGF0aC8kZGlyIiBdOyB0aGVuCiAgICAgICAgICAgICAgICBEICJmb3VuZCAkZGlyIGluICRjbG91ZCIKICAgICAgICAgICAgICAgIGRlY2xhcmUgX0lOXyR7dWNjbG91ZH1fJGRpcgogICAgICAgICAgICBmaQogICAgICAgIGRvbmUKICAgIGZpCmRvbmUKCiMgc2V0LXVwIGFueSBzcGVjaWFsIG9zIGhhbmRsaW5nCmZvciBjbG91ZCBpbiAiJHt1c2VkX2Nsb3Vkc1tAXX0iOyBkbwogICAgdWNjbG91ZD0iJCh1YyAkY2xvdWQpIgogICAgRCAiY2hlY2tpbmcgJGNsb3VkIGZvciBzcGVjaWFsIGhhbmRsaW5nIGZvciAkb3MiCiAgICBpZiBpc3NldCBfSU5fJHt1Y2Nsb3VkfV8ke29zfTsgdGhlbgogICAgICAgIEQgImZvdW5kICRvcyBpbiAkY2xvdWQiCiAgICAgICAgdW5zZXQgY2xvdWRwYXRoCiAgICAgICAgY29weV92YXIgIiR7dWNjbG91ZH1fQUJTIiBjbG91ZHBhdGgKICAgICAgICBEICIkKGRlY2xhcmUgLXAgY2xvdWRwYXRoKSIKICAgICAgICAjIHBsYXRmb3JtLXNwZWNpZmljIHNldHVwCiAgICAgICAgaWYgcmVmaW5lX2FyY2g9IiQocnVuX2lmX3ByZXNlbnQgJGNsb3VkcGF0aC8kb3Mvc2Jpbi9zZXR1cC0kb3MuYmFzaCByZWZpbmVfYXJjaCkiOyB0aGVuCiAgICAgICAgICAgIGFyY2g9IiRyZWZpbmVfYXJjaCIKICAgICAgICBmaQogICAgZmkKZG9uZQoKCiAjIyMjIyMjIyMjIyMjIyMjIyMjLwojIyMjIyMjIyMjIyMjIyMjIyMjLwojIyMKIyMjICBCZWdpbiBGUyBNb2RpZmljYXRpb24KIyMjCiMjIyMjIyMjIyMjIyMjIy8KICMjIyMjIyMjIyMjIyMvCgplY2hvICJTZXR0aW5nLXVwIH4vJFVTUi8uLi4iCgojIGNyZWF0ZSB0aGUgbG9jYWwgdHJlZSwgRklSU1QsIHNvIHdlJ3ZlIHNvbWV3aGVyZSB0byBiYWNrIHRoaW5ncyB1cApjZCAiJEhPTUUiCm1ha2VkaXIgIiRVU1IiCm1ha2VkaXIgIiRBTkNIT1IiCgpwdXNoZCAiJFVTUiIgPi9kZXYvbnVsbApta2RpciAtcCAiJHtGSFNfQ09OQ1JFVEVbQF19IgoKcmVwb3J0IGluZm8gInVzaW5nIGFyY2g9XCIkYXJjaFwiIgpbWyAtZSBhcmNoIF1dIHx8IGxuIC1zICRhcmNoIGFyY2gKCiNUT0RPOiBuZWVkIGEgYmV0dGVyIHdheSBvZiBhdXRvZGV0ZWN0aW5nIHNpdGUuCnNpdGU9JERFVEVDVEVEX1NJVEUKcmVwb3J0IGluZm8gInVzaW5nIHNpdGU9XCIkc2l0ZVwiIgpbWyAtZSBzaXRlIF1dIHx8IGxuIC1zICRzaXRlIHNpdGUKCltbIC1lIHZhci8uJHNpdGUtYXJjaCBdXSB8fCBsbiAtcyAuLi8kc2l0ZS8kYXJjaCB2YXIvLiRzaXRlLWFyY2gKCiMgCiMgc2V0dXBfY2xvdWRfZGlyICROQU1FICRTVkNfSE9NRSAkU1ZDX1JFTEFUSVZFIHdpbGwgLi4uCiMgICAtIHB1dCBhIGxpbmsgYXQgJFVTUi92YXIvJE5BTUUucm9vdCBwb2ludGluZyB0byAkU1ZDX0hPTUUKIyAgIC0gcHV0IGEgbGluayBhdCAkVVNSL3Zhci8kTkFNRSBwb2ludGluZyB0byAkU1ZDX0hPTUUvJFNWQ19SRUxBVElWRQojICAgLSBwdXQgYSBsaW5rIGF0ICRTVkNfSE9NRS8kU1ZDX1JFTEFUSVZFLy5fIHBvaW50aW5nIHRvICRTVkNfSE9NRS8uLi8uXwojICAgLSBwdXQgYSBsaW5rIGF0ICRTVkNfSE9NRS8uLi8uXyBwb2ludGluZyB0byB+Ly5fICh1bmxlc3MgdGhlIHR3byBhcmUgdGhlIHNhbWUgZGlyKQojIApmdW5jdGlvbiBzZXR1cF9jbG91ZF9kaXIgKCkgewogICAgZGVjbGFyZSAtdCBzZXJ2aWNlX25hbWU9IiQxIiBzZXJ2aWNlX2hvbWU9IiQyIiBzZXJ2aWNlX3JlbHBhdGg9IiQzIgogICAgZGVjbGFyZSB2YXI9IiRVU1JfQUJTIi92YXIKICAgIGRlY2xhcmUgLXQgYW5jaG9yX3BhcmVudD0iJChkaXJuYW1lICIkc2VydmljZV9ob21lIikiCiAgICBkZWNsYXJlIC10IGxuX3BhdGg9IiQocmVsYXRpdml6ZSAiJHNlcnZpY2VfaG9tZS8kc2VydmljZV9yZWxwYXRoIiAiJGFuY2hvcl9wYXJlbnQiKSIKICAgIFsgIiQobm9ybWFsaXplICIkYW5jaG9yX3BhcmVudCIgLikiICE9ICIkSE9NRSIgXSAmJiBsaW5rX3RvICIkSE9NRS8kQU5DSE9SIiAiJGFuY2hvcl9wYXJlbnQvJEFOQ0hPUiIKICAgIGxpbmtfdG8gIiRsbl9wYXRoLyRBTkNIT1IiICIkc2VydmljZV9ob21lLyRzZXJ2aWNlX3JlbHBhdGgvJEFOQ0hPUiIKICAgICMgY3JlYXRlIHZhciBzeW1saW5rcyB0byBzaGFyaW5nIHNlcnZpY2VzCiAgICBkZWNsYXJlIC1yIHBhdGhfZnJvbV92YXI9IiQocmVsYXRpdml6ZSAiJHZhciIgIiRzZXJ2aWNlX2hvbWUiKSIKICAgIGxpbmtfdG8gIiRwYXRoX2Zyb21fdmFyIiAiJHZhciIvIiRzZXJ2aWNlX25hbWUiLnJvb3QKICAgIGxpbmtfdG8gIiRzZXJ2aWNlX25hbWUiLnJvb3QvIiRzZXJ2aWNlX3JlbHBhdGgiICIkdmFyIi8iJHNlcnZpY2VfbmFtZSIKfQoKZnVuY3Rpb24gY2xvdWRfZXJyb3JfZGlzcGxheSAoKSB7CiAgICBsb2NhbCBjbG91ZD0iJDEiIHZhcj0iJDIiIHR4dD0iJGNsb3VkIGlzIHNlbGVjdGVkIGJ1dCBjYW4ndCB1bmRlcnN0YW5kIgogICAgZWNobyAiJHR4dCB2YXIgJHZhciA9ICQocXVvdGVkX3ZhbCAkdmFyKSAtLSBTa2lwcGluZyAuLi4iCn0KCmVjaG8gIiQodWMgRm9vKSIKZm9yIGNsb3VkIGluICIke3VzZWRfY2xvdWRzW0BdfSI7IGRvCiAgICB1Y2Nsb3VkPSIkKHVjICRjbG91ZCkiCiAgICBjb3B5X3ZhciAke3VjY2xvdWR9IHNlcnZpY2VfbmFtZQogICAgWyAkPyAtbmUgMCBdICYmIHJlcG9ydCB3YXJuICIkKGNsb3VkX2Vycm9yX2Rpc3BsYXkgJGNsb3VkICR7dWNjbG91ZH0pIiAmJiBjb250aW51ZQogICAgY29weV92YXIgJHt1Y2Nsb3VkfV9IT01FIHNlcnZpY2VfaG9tZQogICAgWyAkPyAtbmUgMCBdICYmIHJlcG9ydCB3YXJuICIkKGNsb3VkX2Vycm9yX2Rpc3BsYXkgJGNsb3VkICR7dWNjbG91ZH1fSE9NRSkiICYmIGNvbnRpbnVlCiAgICBjb3B5X3ZhciAke3VjY2xvdWR9X1JFTEFUSVZFIHNlcnZpY2VfcmVscGF0aAogICAgWyAkPyAtbmUgMCBdICYmIHJlcG9ydCB3YXJuICIkKGNsb3VkX2Vycm9yX2Rpc3BsYXkgJGNsb3VkICR7dWNjbG91ZH1fUkVMQVRJVkUpIiAmJiBjb250aW51ZQogICAgc2V0dXBfY2xvdWRfZGlyICIkc2VydmljZV9uYW1lIiAiJHNlcnZpY2VfaG9tZSIgIiRzZXJ2aWNlX3JlbHBhdGgiCmRvbmUKCiMgc2V0dXBfY2xvdWRfZGlyICIkRFJPUEJPWCIgIiREUk9QQk9YX0hPTUUiICIkRFJPUEJPWF9SRUxBVElWRSIKIyBzZXR1cF9jbG91ZF9kaXIgIiREUklWRSIgIiREUklWRV9IT01FIiAiJERSSVZFX1JFTEFUSVZFIgoKCgojIGZ1bmN0aW9uIGxpbmtfZmhzICgpIHsKIyAgICAgbG9jYWwgZD0iJDEiIHByZWZpeCBwcmltYXJ5IGNsb3VkCiMgfQojIGxpbmsgc2hhcmVkIGRpcnMKZm9yIGQgaW4gIiR7RkhTX0xJTktFRFtAXX0iICIkb3MiICIkYXJjaCIgIiRzaXRlIjsgZG8KICAgIHByZWZpeD0idmFyLyRQUklNQVJZX0NMT1VEIgogICAgZm9yIGNsb3VkIGluICIke3VzZWRfY2xvdWRzW0BdfSI7IGRvCiAgICAgICAgdWNjbG91ZD0iJCh1YyAiJGNsb3VkIikiCiAgICAgICAgaWYgaXNzZXQgX0lOXyR7dWNjbG91ZH1fJHtkfTsgdGhlbgogICAgICAgICAgICBwcmVmaXg9InZhci8kY2xvdWQiCiAgICAgICAgICAgIGJyZWFrCiAgICAgICAgZmkKICAgIGRvbmUKICAgICMgZm9yIGRpciBpbiAiJHtJTl9EUklWRVtAXX0iOyBkbwogICAgIyAgICAgW1sgIiRkIiA9ICIkZGlyIiBdXSAmJiBwcmVmaXg9InZhci8kRFJJVkUvJEdPT0dMRV9EUklWRV9SRUxBVElWRSIKICAgICMgZG9uZQogICAgbGlua190byAiJHByZWZpeC8kZCIgIiRVU1JfQUJTIi8iJGQiCiAgICAjIGlmIFtbIC1lICRkIF1dOyB0aGVuCiAgICAjICAgICByZXBvcnQgbm9vcCAiJGQgYWxyZWFkeSBwcmVzZW50IiA+JjIKICAgICMgZWxzZQogICAgIyAgICAgcmVwb3J0IG9rICJsaW5raW5nIH4vJFVTUi8kZCB0byB+L0Ryb3Bib3gvJERST1BCT1hfUkVMQVRJVkUiCiAgICAjICAgICBsbiAtcyAuLi9Ecm9wYm94LyREUk9QQk9YX1JFTEFUSVZFLyRkIC4KICAgICMgZmkKZG9uZQoKbWFrZWRpciBzaGFyZS9tYW4KbGlua190byBzaGFyZS9tYW4gbWFuCgojIEFkZCBhbmNob3IgbGlua3MgdG8gdmFyaW91cyByb290cwoKZm9yIGQgaW4gLiAiJHtGSFNfTElOS0VEW0BdfSIgIiRhcmNoIiAiJHNpdGUiIHZhciAiJExPQ0FMIiAiJExPQ0FML2JpbiIgOyBkbwogICAgZF9ub3JtPSIkKG5vcm1hbGl6ZSAiJGQiKSIKICAgIGlmIFsgLWQgIiRkIiAtbyAtZCAiJGRfbm9ybSIgXTsgdGhlbgogICAgICAgIGNkICIkZCIKICAgICAgICAjIHJlbGF0aXZpemUgdGhpcwogICAgICAgIGxpbmtfdG8gLi4vJEFOQ0hPUiAkQU5DSE9SCiAgICAgICAgY2QgLSA+L2Rldi9udWxsCiAgICBmaQpkb25lCgojaWNsb3VkIC0+IC4uL0xpYnJhcnkvTW9iaWxlIERvY3VtZW50cy9jb21+YXBwbGV+Q2xvdWREb2NzCnBvcGQgPi9kZXYvbnVsbAoKIyBsaW5rIGxvY2FsIGNwYW4gZGlyCmxpbmtfdG8gJFVTUi92YXIvY3BhbiB+Ly5jcGFuICIkTE9DQUxfQ1BBTl9CQUNLVVAiIAoKIyBsaW5rIH4vLipyYyBmaWxlcyAKZm9yIGYgaW4gIiR7UkNfTElOS0VEW0BdfSI7IGRvCiAgICBsaW5rX3RvICRVU1IvZXRjLyIkZiIgfi8iLiRmIiAiJExPQ0FMX0NPTkZJR19CQUNLVVAiCmRvbmUKCiMgcGxhdGZvcm0tc3BlY2lmaWMgc2V0dXAKcnVuX2lmX3ByZXNlbnQgJEhPTUUvdXNyLyRvcy9zYmluL3NldHVwLSRvcy5iYXNoCgojIHNpdGUtc3BlY2lmaWMgc2V0dXAKcnVuX2lmX3ByZXNlbnQgJEhPTUUvdXNyL3NpdGUvc2Jpbi9zZXR1cC0kc2l0ZS5iYXNoCgojIHNpdGUtc3BlY2lmaWMsIHBsYXRmb3JtLXNwZWNpZmljIHNldHVwCnJ1bl9pZl9wcmVzZW50ICRIT01FL3Vzci9zaXRlL3NiaW4vc2V0dXAtJHNpdGUtJGFyY2guYmFzaAoAAAAAAAAAALQpAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADmDAAAAAAAAOYMAAAAAAAAAAAAAAAA8L8"
				],
				[
					353,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADmDAAAAAAAAOYMAAAAAAAAAAAAAAAA8L8"
				],
				[
					354,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADmDAAAAAAAAOYMAAAAAAAAAAAAAAAA8L8"
				],
				[
					357,
					1,
					"insert",
					{
						"characters": "\ndeclra"
					},
					"BwAAAOoDAAAAAAAA6wMAAAAAAAAAAAAA6wMAAAAAAADsAwAAAAAAAAAAAADsAwAAAAAAAO0DAAAAAAAAAAAAAO0DAAAAAAAA7gMAAAAAAAAAAAAA7gMAAAAAAADvAwAAAAAAAAAAAADvAwAAAAAAAPADAAAAAAAAAAAAAPADAAAAAAAA8QMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADqAwAAAAAAAOoDAAAAAAAAAAAAAAAA8L8"
				],
				[
					358,
					2,
					"left_delete",
					null,
					"AgAAAPADAAAAAAAA8AMAAAAAAAABAAAAYe8DAAAAAAAA7wMAAAAAAAABAAAAcg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADxAwAAAAAAAPEDAAAAAAAAAAAAAAAA8L8"
				],
				[
					359,
					1,
					"insert",
					{
						"characters": "are"
					},
					"AwAAAO8DAAAAAAAA8AMAAAAAAAAAAAAA8AMAAAAAAADxAwAAAAAAAAAAAADxAwAAAAAAAPIDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADvAwAAAAAAAO8DAAAAAAAAAAAAAAAA8L8"
				],
				[
					360,
					1,
					"insert",
					{
						"characters": " -r"
					},
					"AwAAAPIDAAAAAAAA8wMAAAAAAAAAAAAA8wMAAAAAAAD0AwAAAAAAAAAAAAD0AwAAAAAAAPUDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADyAwAAAAAAAPIDAAAAAAAAAAAAAAAA8L8"
				],
				[
					361,
					1,
					"insert",
					{
						"characters": " LOCAL_"
					},
					"BwAAAPUDAAAAAAAA9gMAAAAAAAAAAAAA9gMAAAAAAAD3AwAAAAAAAAAAAAD3AwAAAAAAAPgDAAAAAAAAAAAAAPgDAAAAAAAA+QMAAAAAAAAAAAAA+QMAAAAAAAD6AwAAAAAAAAAAAAD6AwAAAAAAAPsDAAAAAAAAAAAAAPsDAAAAAAAA/AMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD1AwAAAAAAAPUDAAAAAAAAAAAAAAAA8L8"
				],
				[
					362,
					1,
					"insert",
					{
						"characters": "PIP_"
					},
					"BAAAAPwDAAAAAAAA/QMAAAAAAAAAAAAA/QMAAAAAAAD+AwAAAAAAAAAAAAD+AwAAAAAAAP8DAAAAAAAAAAAAAP8DAAAAAAAAAAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD8AwAAAAAAAPwDAAAAAAAAAAAAAAAA8L8"
				],
				[
					363,
					1,
					"insert",
					{
						"characters": "BACKUP="
					},
					"BwAAAAAEAAAAAAAAAQQAAAAAAAAAAAAAAQQAAAAAAAACBAAAAAAAAAAAAAACBAAAAAAAAAMEAAAAAAAAAAAAAAMEAAAAAAAABAQAAAAAAAAAAAAABAQAAAAAAAAFBAAAAAAAAAAAAAAFBAAAAAAAAAYEAAAAAAAAAAAAAAYEAAAAAAAABwQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAABAAAAAAAAAAEAAAAAAAAAAAAAAAA8L8"
				],
				[
					364,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAAcEAAAAAAAACQQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAHBAAAAAAAAAcEAAAAAAAAAAAAAAAA8L8"
				],
				[
					367,
					1,
					"insert",
					{
						"characters": "$USR?"
					},
					"BQAAAAgEAAAAAAAACQQAAAAAAAAAAAAACQQAAAAAAAAKBAAAAAAAAAAAAAAKBAAAAAAAAAsEAAAAAAAAAAAAAAsEAAAAAAAADAQAAAAAAAAAAAAADAQAAAAAAAANBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAIBAAAAAAAAAgEAAAAAAAAAAAAAABgaUA"
				],
				[
					368,
					1,
					"left_delete",
					null,
					"AQAAAAwEAAAAAAAADAQAAAAAAAABAAAAPw",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAANBAAAAAAAAA0EAAAAAAAAAAAAAAAA8L8"
				],
				[
					369,
					1,
					"insert",
					{
						"characters": "/var/pip/"
					},
					"CQAAAAwEAAAAAAAADQQAAAAAAAAAAAAADQQAAAAAAAAOBAAAAAAAAAAAAAAOBAAAAAAAAA8EAAAAAAAAAAAAAA8EAAAAAAAAEAQAAAAAAAAAAAAAEAQAAAAAAAARBAAAAAAAAAAAAAARBAAAAAAAABIEAAAAAAAAAAAAABIEAAAAAAAAEwQAAAAAAAAAAAAAEwQAAAAAAAAUBAAAAAAAAAAAAAAUBAAAAAAAABUEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAMBAAAAAAAAAwEAAAAAAAAAAAAAAAA8L8"
				],
				[
					370,
					1,
					"insert",
					{
						"characters": "original"
					},
					"CAAAABUEAAAAAAAAFgQAAAAAAAAAAAAAFgQAAAAAAAAXBAAAAAAAAAAAAAAXBAAAAAAAABgEAAAAAAAAAAAAABgEAAAAAAAAGQQAAAAAAAAAAAAAGQQAAAAAAAAaBAAAAAAAAAAAAAAaBAAAAAAAABsEAAAAAAAAAAAAABsEAAAAAAAAHAQAAAAAAAAAAAAAHAQAAAAAAAAdBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAVBAAAAAAAABUEAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "/Users/rmei/Dropbox/usr/etc/gitconfig",
			"settings":
			{
				"buffer_size": 1405,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"right_delete",
					null,
					"AQAAADEAAAAAAAAAMQAAAAAAAABWAAAAIwllbWFpbCA9IHJtZWlAc2FsZXNmb3JjZS5jb20KIwlzaWduaW5na2V5ID0gQzU3OTg3NDRGOUQ0MjNBMzFDQkU4QjNBMTVBRTYxQjg5MEY4OTBERgo",
					"AQAAAAAAAAABAAAAMQAAAAAAAACHAAAAAAAAAAAAAAAAAAAA"
				],
				[
					10,
					1,
					"right_delete",
					null,
					"AQAAAH0FAAAAAAAAfQUAAAAAAACxAAAAW3RyYWNlMl0KCW5vcm1hbHRhcmdldCA9IC9Vc2Vycy9ybWVpLy5naW1sZXQtaG9tZS90cmFjZTIKCWNvbmZpZ1BhcmFtcyA9IHJlbW90ZS4qLnVybAoJbm9ybWFsQnJpZWYgPSB0cnVlCiMgW2dpbWxldF0KIyAJdGVsZW1ldHJ5LWhvc3QtaWQgPSA1QjgxQTA0OS1FODlCLTQ5NEQtQkRBRS0xMUYwNzMzNjdGNTEK",
					"AQAAAAAAAAABAAAAfQUAAAAAAAAuBgAAAAAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"file": "/Users/rmei/scrub/etc/bazelrc",
			"settings":
			{
				"buffer_size": 256,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					14,
					1,
					"insert",
					{
						"characters": "Site"
					},
					"BQAAAAQAAAAAAAAABQAAAAAAAAAAAAAABQAAAAAAAAAFAAAAAAAAAAgAAABQZXJzb25hbAUAAAAAAAAABgAAAAAAAAAAAAAABgAAAAAAAAAHAAAAAAAAAAAAAAAHAAAAAAAAAAgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABAAAAAAAAAAMAAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"right_delete",
					null,
					"AQAAABYAAAAAAAAAFgAAAAAAAAC1AAAAY29tbW9uIC0td2F0Y2hmcwoKYnVpbGQgLS1zaG93X3RpbWVzdGFtcHMKIyBidWlsZCAtLWtlZXBfZ29pbmcgLS1qb2JzIDYwMApidWlsZCAtLWNvbG9yPXllcwoKcXVlcnkgLS1jb2xvcj15ZXMKcXVlcnkgLS1zaG93X3RpbWVzdGFtcHMKcXVlcnkgLS1rZWVwX2dvaW5nCnF1ZXJ5IC0tb3V0cHV0IGxhYmVsX2tpbmQKCg",
					"AQAAAAAAAAABAAAAFgAAAAAAAADLAAAAAAAAAAAAAAAAAAAA"
				],
				[
					21,
					1,
					"right_delete",
					null,
					"AQAAAAEBAAAAAAAAAQEAAAAAAACNAAAAIyBzaXRlLXNwZWNpZmljLCBzaXRlLXdpZGUgY29uZmlncwp0cnktaW1wb3J0ICRIT01FL3Vzci9zaXRlL2V0Yy9iYXplbHJjCgojIHdvcmtzcGFjZS1zcGVjaWZpYyBjb25maWdzCnRyeS1pbXBvcnQgJXdvcmtzcGFjZSUvLmJhemVscmMtbG9jYWwK",
					"AQAAAAAAAAABAAAAAQEAAAAAAACOAQAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"left_delete",
					null,
					"AQAAAAABAAAAAAAAAAEAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAAQEAAAAAAAABAQAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAIyMjIFNpdGUgYmF6ZWxyYyAjIyMKCnF1ZXJ5OmNvcmVza3kgLS1vcmRlcl9vdXRwdXQ9bm8gLS11bml2ZXJzZV9zY29wZT0vL3Rvb2xzL2J1aWxkL2JhemVsL3BhY2thZ2VzOmNvcmVfcGFja2FnZXMKIyBxdWVyeTpjb3Jlc2t5IC0tb3JkZXJfb3V0cHV0PW5vIC0taW5mZXJfdW5pdmVyc2Vfc2NvcGUKcXVlcnk6c2t5IC0tb3JkZXJfb3V0cHV0PW5vIC0tdW5pdmVyc2Vfc2NvcGU9Ly9jb3JlLWFwcC90ZXN0L2Z1bmM6Y29yZV9hcHBfdGVzdF9mdW5jCgAAAAAAAAAAAAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAEAAAAAAAAAAQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "/Users/rmei/scrub/etc/bash_profile",
			"settings":
			{
				"buffer_size": 1803,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/rmei/Dropbox/usr/etc/bazelrc",
			"settings":
			{
				"buffer_size": 348,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"left_delete",
					null,
					"AQAAAM8AAAAAAAAAzwAAAAAAAADrAAAAcXVlcnk6Y29yZXNreSAtLW9yZGVyX291dHB1dD1ubyAtLXVuaXZlcnNlX3Njb3BlPS8vdG9vbHMvYnVpbGQvYmF6ZWwvcGFja2FnZXM6Y29yZV9wYWNrYWdlcwojIHF1ZXJ5OmNvcmVza3kgLS1vcmRlcl9vdXRwdXQ9bm8gLS1pbmZlcl91bml2ZXJzZV9zY29wZQpxdWVyeTpza3kgLS1vcmRlcl9vdXRwdXQ9bm8gLS11bml2ZXJzZV9zY29wZT0vL2NvcmUtYXBwL3Rlc3QvZnVuYzpjb3JlX2FwcF90ZXN0X2Z1bmMKCg",
					"AQAAAAAAAAABAAAAzwAAAAAAAAC6AQAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAABcAQAAIyMjIFBlcnNvbmFsIGJhemVscmMgIyMjCgpjb21tb24gLS13YXRjaGZzCgpidWlsZCAtLXNob3dfdGltZXN0YW1wcwojIGJ1aWxkIC0ta2VlcF9nb2luZyAtLWpvYnMgNjAwCmJ1aWxkIC0tY29sb3I9eWVzCgpxdWVyeSAtLWNvbG9yPXllcwpxdWVyeSAtLXNob3dfdGltZXN0YW1wcwpxdWVyeSAtLWtlZXBfZ29pbmcKcXVlcnkgLS1vdXRwdXQgbGFiZWxfa2luZAoKIyBzaXRlLXNwZWNpZmljLCBzaXRlLXdpZGUgY29uZmlncwp0cnktaW1wb3J0ICRIT01FL3Vzci9zaXRlL2V0Yy9iYXplbHJjCgojIHdvcmtzcGFjZS1zcGVjaWZpYyBjb25maWdzCnRyeS1pbXBvcnQgJXdvcmtzcGFjZSUvLmJhemVscmMtbG9jYWwKAAAAAAAAAABcAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzgAAAAAAAADOAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "setup-eyrie",
			"settings":
			{
				"buffer_size": 10728,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAIgAAAAAAAAAiQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACIAAAAAAAAAIgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": "TODO:"
					},
					"BQAAAOYDAAAAAAAA5wMAAAAAAAAAAAAA5wMAAAAAAADoAwAAAAAAAAAAAADoAwAAAAAAAOkDAAAAAAAAAAAAAOkDAAAAAAAA6gMAAAAAAAAAAAAA6gMAAAAAAADrAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADmAwAAAAAAAOYDAAAAAAAAAAAAAAAA8L8"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOsDAAAAAAAA7AMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADrAwAAAAAAAOsDAAAAAAAAAAAAAAAA8L8"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAIkAAAAAAAAAigAAAAAAAAAAAAAAigAAAAAAAACLAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACJAAAAAAAAAIkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "builtin"
					},
					"BwAAAIoAAAAAAAAAiwAAAAAAAAAAAAAAiwAAAAAAAACMAAAAAAAAAAAAAACMAAAAAAAAAI0AAAAAAAAAAAAAAI0AAAAAAAAAjgAAAAAAAAAAAAAAjgAAAAAAAACPAAAAAAAAAAAAAACPAAAAAAAAAJAAAAAAAAAAAAAAAJAAAAAAAAAAkQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACKAAAAAAAAAIoAAAAAAAAAAAAAAAAAAAA"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": " source"
					},
					"BwAAAJEAAAAAAAAAkgAAAAAAAAAAAAAAkgAAAAAAAACTAAAAAAAAAAAAAACTAAAAAAAAAJQAAAAAAAAAAAAAAJQAAAAAAAAAlQAAAAAAAAAAAAAAlQAAAAAAAACWAAAAAAAAAAAAAACWAAAAAAAAAJcAAAAAAAAAAAAAAJcAAAAAAAAAmAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACRAAAAAAAAAJEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": " ~/"
					},
					"AwAAAJgAAAAAAAAAmQAAAAAAAAAAAAAAmQAAAAAAAACaAAAAAAAAAAAAAACaAAAAAAAAAJsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACYAAAAAAAAAJgAAAAAAAAAAAAAAAAA8L8"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": ".eyrierc"
					},
					"CAAAAJsAAAAAAAAAnAAAAAAAAAAAAAAAnAAAAAAAAACdAAAAAAAAAAAAAACdAAAAAAAAAJ4AAAAAAAAAAAAAAJ4AAAAAAAAAnwAAAAAAAAAAAAAAnwAAAAAAAACgAAAAAAAAAAAAAACgAAAAAAAAAKEAAAAAAAAAAAAAAKEAAAAAAAAAogAAAAAAAAAAAAAAogAAAAAAAACjAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACbAAAAAAAAAJsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAAIoAAAAAAAAAiwAAAAAAAAAAAAAAiwAAAAAAAACMAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACKAAAAAAAAAIoAAAAAAAAAAAAAAAAAAAA"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": " -"
					},
					"AgAAAIwAAAAAAAAAjQAAAAAAAAAAAAAAjQAAAAAAAACOAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACMAAAAAAAAAIwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					29,
					1,
					"left_delete",
					null,
					"AQAAAI0AAAAAAAAAjQAAAAAAAAABAAAALQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACOAAAAAAAAAI4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": "[["
					},
					"AgAAAI0AAAAAAAAAjgAAAAAAAAAAAAAAjgAAAAAAAACPAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACNAAAAAAAAAI0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": " -f"
					},
					"AwAAAI8AAAAAAAAAkAAAAAAAAAAAAAAAkAAAAAAAAACRAAAAAAAAAAAAAACRAAAAAAAAAJIAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACPAAAAAAAAAI8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": " \""
					},
					"AgAAAJIAAAAAAAAAkwAAAAAAAAAAAAAAkwAAAAAAAACUAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACSAAAAAAAAAJIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					33,
					1,
					"left_delete",
					null,
					"AQAAAJMAAAAAAAAAkwAAAAAAAAABAAAAIg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACUAAAAAAAAAJQAAAAAAAAAAAAAAAAA8L8"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": "~/.y"
					},
					"BAAAAJMAAAAAAAAAlAAAAAAAAAAAAAAAlAAAAAAAAACVAAAAAAAAAAAAAACVAAAAAAAAAJYAAAAAAAAAAAAAAJYAAAAAAAAAlwAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACTAAAAAAAAAJMAAAAAAAAAAAAAAAAA8L8"
				],
				[
					35,
					1,
					"left_delete",
					null,
					"AQAAAJYAAAAAAAAAlgAAAAAAAAABAAAAeQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACXAAAAAAAAAJcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": "eyrierc"
					},
					"BwAAAJYAAAAAAAAAlwAAAAAAAAAAAAAAlwAAAAAAAACYAAAAAAAAAAAAAACYAAAAAAAAAJkAAAAAAAAAAAAAAJkAAAAAAAAAmgAAAAAAAAAAAAAAmgAAAAAAAACbAAAAAAAAAAAAAACbAAAAAAAAAJwAAAAAAAAAAAAAAJwAAAAAAAAAnQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACWAAAAAAAAAJYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": " ]];"
					},
					"BAAAAJ0AAAAAAAAAngAAAAAAAAAAAAAAngAAAAAAAACfAAAAAAAAAAAAAACfAAAAAAAAAKAAAAAAAAAAAAAAAKAAAAAAAAAAoQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACdAAAAAAAAAJ0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": " then"
					},
					"BQAAAKEAAAAAAAAAogAAAAAAAAAAAAAAogAAAAAAAACjAAAAAAAAAAAAAACjAAAAAAAAAKQAAAAAAAAAAAAAAKQAAAAAAAAApQAAAAAAAAAAAAAApQAAAAAAAACmAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAChAAAAAAAAAKEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAKYAAAAAAAAApwAAAAAAAAAAAAAApwAAAAAAAACrAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACmAAAAAAAAAKYAAAAAAAAAAAAAAAAA8L8"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": "\nfi"
					},
					"BgAAAMQAAAAAAAAAxQAAAAAAAAAAAAAAxQAAAAAAAADJAAAAAAAAAAAAAADJAAAAAAAAAMoAAAAAAAAAAAAAAMoAAAAAAAAAywAAAAAAAAAAAAAAxQAAAAAAAADFAAAAAAAAAAQAAAAgICAgxQAAAAAAAADFAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADEAAAAAAAAAMQAAAAAAAAA////////738"
				],
				[
					49,
					1,
					"cut",
					null,
					"AQAAAIkGAAAAAAAAiQYAAAAAAAAXAAAAZXhwb3J0IF9TRVRVUF9ERUJVRz0xCgo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACJBgAAAAAAAKAGAAAAAAAAAAAAAAAAAAA"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": "setup"
					},
					"BQAAAOIMAAAAAAAA4wwAAAAAAAAAAAAA4wwAAAAAAADkDAAAAAAAAAAAAADkDAAAAAAAAOUMAAAAAAAAAAAAAOUMAAAAAAAA5gwAAAAAAAAAAAAA5gwAAAAAAADnDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADiDAAAAAAAAOIMAAAAAAAAAAAAAAAA8L8"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": "-"
					},
					"AQAAAOIMAAAAAAAA4wwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADiDAAAAAAAAOIMAAAAAAAAAAAAAAAA8L8"
				],
				[
					80,
					1,
					"insert",
					{
						"characters": "-setup"
					},
					"BgAAABUNAAAAAAAAFg0AAAAAAAAAAAAAFg0AAAAAAAAXDQAAAAAAAAAAAAAXDQAAAAAAABgNAAAAAAAAAAAAABgNAAAAAAAAGQ0AAAAAAAAAAAAAGQ0AAAAAAAAaDQAAAAAAAAAAAAAaDQAAAAAAABsNAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAVDQAAAAAAABUNAAAAAAAAAAAAAAAA8L8"
				],
				[
					103,
					1,
					"insert",
					{
						"characters": " as"
					},
					"AwAAAFoRAAAAAAAAWxEAAAAAAAAAAAAAWxEAAAAAAABcEQAAAAAAAAAAAABcEQAAAAAAAF0RAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABaEQAAAAAAAFoRAAAAAAAAAAAAAAAA8L8"
				],
				[
					104,
					1,
					"insert",
					{
						"characters": " one"
					},
					"BAAAAF0RAAAAAAAAXhEAAAAAAAAAAAAAXhEAAAAAAABfEQAAAAAAAAAAAABfEQAAAAAAAGARAAAAAAAAAAAAAGARAAAAAAAAYREAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABdEQAAAAAAAF0RAAAAAAAAAAAAAAAA8L8"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": " we"
					},
					"AwAAAGERAAAAAAAAYhEAAAAAAAAAAAAAYhEAAAAAAABjEQAAAAAAAAAAAABjEQAAAAAAAGQRAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABhEQAAAAAAAGERAAAAAAAAAAAAAAAA8L8"
				],
				[
					106,
					1,
					"insert",
					{
						"characters": " support"
					},
					"CAAAAGQRAAAAAAAAZREAAAAAAAAAAAAAZREAAAAAAABmEQAAAAAAAAAAAABmEQAAAAAAAGcRAAAAAAAAAAAAAGcRAAAAAAAAaBEAAAAAAAAAAAAAaBEAAAAAAABpEQAAAAAAAAAAAABpEQAAAAAAAGoRAAAAAAAAAAAAAGoRAAAAAAAAaxEAAAAAAAAAAAAAaxEAAAAAAABsEQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABkEQAAAAAAAGQRAAAAAAAAAAAAAAAA8L8"
				],
				[
					119,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABwSAAAAAAAAHRIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAcEgAAAAAAABwSAAAAAAAAAAAAAAAA8L8"
				],
				[
					120,
					1,
					"left_delete",
					null,
					"AQAAABwSAAAAAAAAHBIAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAdEgAAAAAAAB0SAAAAAAAAAAAAAAAA8L8"
				],
				[
					122,
					1,
					"insert",
					{
						"characters": " .."
					},
					"AwAAABsSAAAAAAAAHBIAAAAAAAAAAAAAHBIAAAAAAAAdEgAAAAAAAAAAAAAdEgAAAAAAAB4SAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAbEgAAAAAAABsSAAAAAAAAAAAAAAAA8L8"
				],
				[
					125,
					1,
					"insert",
					{
						"characters": "Optimistic,"
					},
					"DAAAAOERAAAAAAAA4hEAAAAAAAAAAAAA4hEAAAAAAADiEQAAAAAAACcAAABZb3UncmUgcXVpdGUgdGhlIG9wdGltaXN0LCBhcmVuJ3QgeW91PyDiEQAAAAAAAOMRAAAAAAAAAAAAAOMRAAAAAAAA5BEAAAAAAAAAAAAA5BEAAAAAAADlEQAAAAAAAAAAAADlEQAAAAAAAOYRAAAAAAAAAAAAAOYRAAAAAAAA5xEAAAAAAAAAAAAA5xEAAAAAAADoEQAAAAAAAAAAAADoEQAAAAAAAOkRAAAAAAAAAAAAAOkRAAAAAAAA6hEAAAAAAAAAAAAA6hEAAAAAAADrEQAAAAAAAAAAAADrEQAAAAAAAOwRAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADhEQAAAAAAAAgSAAAAAAAAAAAAAAAA8L8"
				],
				[
					126,
					1,
					"insert",
					{
						"characters": " but"
					},
					"BAAAAOwRAAAAAAAA7REAAAAAAAAAAAAA7REAAAAAAADuEQAAAAAAAAAAAADuEQAAAAAAAO8RAAAAAAAAAAAAAO8RAAAAAAAA8BEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADsEQAAAAAAAOwRAAAAAAAAAAAAAAAA8L8"
				],
				[
					127,
					1,
					"insert",
					{
						"characters": " okay,"
					},
					"BgAAAPARAAAAAAAA8REAAAAAAAAAAAAA8REAAAAAAADyEQAAAAAAAAAAAADyEQAAAAAAAPMRAAAAAAAAAAAAAPMRAAAAAAAA9BEAAAAAAAAAAAAA9BEAAAAAAAD1EQAAAAAAAAAAAAD1EQAAAAAAAPYRAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADwEQAAAAAAAPARAAAAAAAAAAAAAAAA8L8"
				],
				[
					128,
					1,
					"insert",
					{
						"characters": " we'll"
					},
					"BgAAAPYRAAAAAAAA9xEAAAAAAAAAAAAA9xEAAAAAAAD4EQAAAAAAAAAAAAD4EQAAAAAAAPkRAAAAAAAAAAAAAPkRAAAAAAAA+hEAAAAAAAAAAAAA+hEAAAAAAAD7EQAAAAAAAAAAAAD7EQAAAAAAAPwRAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD2EQAAAAAAAPYRAAAAAAAAAAAAAAAA8L8"
				],
				[
					129,
					1,
					"insert",
					{
						"characters": " try"
					},
					"BAAAAPwRAAAAAAAA/REAAAAAAAAAAAAA/REAAAAAAAD+EQAAAAAAAAAAAAD+EQAAAAAAAP8RAAAAAAAAAAAAAP8RAAAAAAAAABIAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD8EQAAAAAAAPwRAAAAAAAAAAAAAAAA8L8"
				],
				[
					131,
					1,
					"right_delete",
					null,
					"AQAAAAASAAAAAAAAABIAAAAAAAATAAAAR29vZCBsdWNrIHdpdGggdGhhdA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAEgAAAAAAABMSAAAAAAAAAAAAAAAA8L8"
				],
				[
					136,
					1,
					"insert",
					{
						"characters": " Probably"
					},
					"CQAAAPYTAAAAAAAA9xMAAAAAAAAAAAAA9xMAAAAAAAD4EwAAAAAAAAAAAAD4EwAAAAAAAPkTAAAAAAAAAAAAAPkTAAAAAAAA+hMAAAAAAAAAAAAA+hMAAAAAAAD7EwAAAAAAAAAAAAD7EwAAAAAAAPwTAAAAAAAAAAAAAPwTAAAAAAAA/RMAAAAAAAAAAAAA/RMAAAAAAAD+EwAAAAAAAAAAAAD+EwAAAAAAAP8TAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD2EwAAAAAAAPYTAAAAAAAAAAAAAAAA8L8"
				],
				[
					137,
					1,
					"insert",
					{
						"characters": " use"
					},
					"BAAAAP8TAAAAAAAAABQAAAAAAAAAAAAAABQAAAAAAAABFAAAAAAAAAAAAAABFAAAAAAAAAIUAAAAAAAAAAAAAAIUAAAAAAAAAxQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD/EwAAAAAAAP8TAAAAAAAAAAAAAAAA8L8"
				],
				[
					138,
					1,
					"insert",
					{
						"characters": " .eyrie-"
					},
					"CAAAAAMUAAAAAAAABBQAAAAAAAAAAAAABBQAAAAAAAAFFAAAAAAAAAAAAAAFFAAAAAAAAAYUAAAAAAAAAAAAAAYUAAAAAAAABxQAAAAAAAAAAAAABxQAAAAAAAAIFAAAAAAAAAAAAAAIFAAAAAAAAAkUAAAAAAAAAAAAAAkUAAAAAAAAChQAAAAAAAAAAAAAChQAAAAAAAALFAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAADFAAAAAAAAAMUAAAAAAAAAAAAAAAA8L8"
				],
				[
					139,
					1,
					"insert",
					{
						"characters": "setuprc"
					},
					"BwAAAAsUAAAAAAAADBQAAAAAAAAAAAAADBQAAAAAAAANFAAAAAAAAAAAAAANFAAAAAAAAA4UAAAAAAAAAAAAAA4UAAAAAAAADxQAAAAAAAAAAAAADxQAAAAAAAAQFAAAAAAAAAAAAAAQFAAAAAAAABEUAAAAAAAAAAAAABEUAAAAAAAAEhQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAALFAAAAAAAAAsUAAAAAAAAAAAAAAAA8L8"
				],
				[
					141,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABIUAAAAAAAAExQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAASFAAAAAAAABIUAAAAAAAAAAAAAAAA8L8"
				],
				[
					142,
					1,
					"left_delete",
					null,
					"AQAAABIUAAAAAAAAEhQAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAATFAAAAAAAABMUAAAAAAAAAAAAAAAA8L8"
				],
				[
					143,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAASFAAAAAAAABIUAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "setup.config",
			"settings":
			{
				"buffer_size": 1097,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					7,
					1,
					"cut",
					null,
					"AQAAAAgBAAAAAAAACAEAAAAAAAAlAAAAZGVjbGFyZSBEUk9QQk9YX0hPTUU9IiRIT01FIi9Ecm9wYm94Cg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAIAQAAAAAAAC0BAAAAAAAAAAAAAAAAAAA"
				],
				[
					9,
					1,
					"paste",
					null,
					"AQAAAEsBAAAAAAAAcAEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABLAQAAAAAAAEsBAAAAAAAAAAAAAAAAAAA"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAANMBAAAAAAAA1AEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADTAQAAAAAAANMBAAAAAAAAAAAAAAAA8L8"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": "Drive"
					},
					"BgAAAJYDAAAAAAAAlwMAAAAAAAAAAAAAlwMAAAAAAACXAwAAAAAAAAcAAABEcm9wYm94lwMAAAAAAACYAwAAAAAAAAAAAACYAwAAAAAAAJkDAAAAAAAAAAAAAJkDAAAAAAAAmgMAAAAAAAAAAAAAmgMAAAAAAACbAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACWAwAAAAAAAJ0DAAAAAAAAAAAAAAAA8L8"
				],
				[
					43,
					11,
					"left_delete",
					null,
					"CwAAANwDAAAAAAAA3AMAAAAAAAAHAAAARHJvcGJveNsDAAAAAAAA2wMAAAAAAAABAAAAINoDAAAAAAAA2gMAAAAAAAABAAAAZtkDAAAAAAAA2QMAAAAAAAABAAAAb9gDAAAAAAAA2AMAAAAAAAABAAAAINcDAAAAAAAA1wMAAAAAAAABAAAAZNYDAAAAAAAA1gMAAAAAAAABAAAAYdUDAAAAAAAA1QMAAAAAAAABAAAAZdQDAAAAAAAA1AMAAAAAAAABAAAAdNMDAAAAAAAA0wMAAAAAAAABAAAAc9IDAAAAAAAA0gMAAAAAAAABAAAAbg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADcAwAAAAAAAOMDAAAAAAAAAAAAAAAA8L8"
				],
				[
					44,
					1,
					"left_delete",
					null,
					"AQAAANEDAAAAAAAA0QMAAAAAAAABAAAAaQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADSAwAAAAAAANIDAAAAAAAAAAAAAAAA8L8"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": "regardless"
					},
					"CgAAANEDAAAAAAAA0gMAAAAAAAAAAAAA0gMAAAAAAADTAwAAAAAAAAAAAADTAwAAAAAAANQDAAAAAAAAAAAAANQDAAAAAAAA1QMAAAAAAAAAAAAA1QMAAAAAAADWAwAAAAAAAAAAAADWAwAAAAAAANcDAAAAAAAAAAAAANcDAAAAAAAA2AMAAAAAAAAAAAAA2AMAAAAAAADZAwAAAAAAAAAAAADZAwAAAAAAANoDAAAAAAAAAAAAANoDAAAAAAAA2wMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADRAwAAAAAAANEDAAAAAAAAAAAAAAAA8L8"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": " of"
					},
					"AwAAANsDAAAAAAAA3AMAAAAAAAAAAAAA3AMAAAAAAADdAwAAAAAAAAAAAADdAwAAAAAAAN4DAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADbAwAAAAAAANsDAAAAAAAAAAAAAAAA8L8"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": " whether"
					},
					"CAAAAN4DAAAAAAAA3wMAAAAAAAAAAAAA3wMAAAAAAADgAwAAAAAAAAAAAADgAwAAAAAAAOEDAAAAAAAAAAAAAOEDAAAAAAAA4gMAAAAAAAAAAAAA4gMAAAAAAADjAwAAAAAAAAAAAADjAwAAAAAAAOQDAAAAAAAAAAAAAOQDAAAAAAAA5QMAAAAAAAAAAAAA5QMAAAAAAADmAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADeAwAAAAAAAN4DAAAAAAAAAAAAAAAA8L8"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": " it"
					},
					"AwAAAOYDAAAAAAAA5wMAAAAAAAAAAAAA5wMAAAAAAADoAwAAAAAAAAAAAADoAwAAAAAAAOkDAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADmAwAAAAAAAOYDAAAAAAAAAAAAAAAA8L8"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOkDAAAAAAAA6gMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADpAwAAAAAAAOkDAAAAAAAAAAAAAAAA8L8"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": "is"
					},
					"AgAAAOoDAAAAAAAA6wMAAAAAAAAAAAAA6wMAAAAAAADsAwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADqAwAAAAAAAOoDAAAAAAAAAAAAAAAA8L8"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAAOwDAAAAAAAA7QMAAAAAAAAAAAAA7QMAAAAAAADuAwAAAAAAAAAAAADuAwAAAAAAAO8DAAAAAAAAAAAAAO8DAAAAAAAA8AMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADsAwAAAAAAAOwDAAAAAAAAAAAAAAAA8L8"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": " default"
					},
					"CAAAAPADAAAAAAAA8QMAAAAAAAAAAAAA8QMAAAAAAADyAwAAAAAAAAAAAADyAwAAAAAAAPMDAAAAAAAAAAAAAPMDAAAAAAAA9AMAAAAAAAAAAAAA9AMAAAAAAAD1AwAAAAAAAAAAAAD1AwAAAAAAAPYDAAAAAAAAAAAAAPYDAAAAAAAA9wMAAAAAAAAAAAAA9wMAAAAAAAD4AwAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADwAwAAAAAAAPADAAAAAAAAAAAAAAAA8L8"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": "primary"
					},
					"CAAAAPEDAAAAAAAA8gMAAAAAAAAAAAAA8gMAAAAAAADyAwAAAAAAAAcAAABkZWZhdWx08gMAAAAAAADzAwAAAAAAAAAAAADzAwAAAAAAAPQDAAAAAAAAAAAAAPQDAAAAAAAA9QMAAAAAAAAAAAAA9QMAAAAAAAD2AwAAAAAAAAAAAAD2AwAAAAAAAPcDAAAAAAAAAAAAAPcDAAAAAAAA+AMAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD4AwAAAAAAAPEDAAAAAAAAAAAAAAAA8L8"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": " cloud"
					},
					"BgAAAPgDAAAAAAAA+QMAAAAAAAAAAAAA+QMAAAAAAAD6AwAAAAAAAAAAAAD6AwAAAAAAAPsDAAAAAAAAAAAAAPsDAAAAAAAA/AMAAAAAAAAAAAAA/AMAAAAAAAD9AwAAAAAAAAAAAAD9AwAAAAAAAP4DAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD4AwAAAAAAAPgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					59,
					2,
					"right_delete",
					null,
					"AgAAABUEAAAAAAAAFQQAAAAAAAAEAAAAc2ZkYxUEAAAAAAAAFQQAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAZBAAAAAAAABUEAAAAAAAAAAAAAAAA8L8"
				],
				[
					62,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABQEAAAAAAAAFQQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAUBAAAAAAAABQEAAAAAAAAAAAAAAAA8L8"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": "\ndeclare"
					},
					"CAAAABcEAAAAAAAAGAQAAAAAAAAAAAAAGAQAAAAAAAAZBAAAAAAAAAAAAAAZBAAAAAAAABoEAAAAAAAAAAAAABoEAAAAAAAAGwQAAAAAAAAAAAAAGwQAAAAAAAAcBAAAAAAAAAAAAAAcBAAAAAAAAB0EAAAAAAAAAAAAAB0EAAAAAAAAHgQAAAAAAAAAAAAAHgQAAAAAAAAfBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAXBAAAAAAAABcEAAAAAAAA////////738"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": " -a"
					},
					"AwAAAB8EAAAAAAAAIAQAAAAAAAAAAAAAIAQAAAAAAAAhBAAAAAAAAAAAAAAhBAAAAAAAACIEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAfBAAAAAAAAB8EAAAAAAAAAAAAAAAA8L8"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": " IN_DR"
					},
					"BgAAACIEAAAAAAAAIwQAAAAAAAAAAAAAIwQAAAAAAAAkBAAAAAAAAAAAAAAkBAAAAAAAACUEAAAAAAAAAAAAACUEAAAAAAAAJgQAAAAAAAAAAAAAJgQAAAAAAAAnBAAAAAAAAAAAAAAnBAAAAAAAACgEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAiBAAAAAAAACIEAAAAAAAAAAAAAAAA8L8"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": "OPBOX"
					},
					"BQAAACgEAAAAAAAAKQQAAAAAAAAAAAAAKQQAAAAAAAAqBAAAAAAAAAAAAAAqBAAAAAAAACsEAAAAAAAAAAAAACsEAAAAAAAALAQAAAAAAAAAAAAALAQAAAAAAAAtBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAoBAAAAAAAACgEAAAAAAAAAAAAAAAA8L8"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAC0EAAAAAAAALgQAAAAAAAAAAAAALgQAAAAAAAAvBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAtBAAAAAAAAC0EAAAAAAAAAAAAAAAA8L8"
				],
				[
					71,
					2,
					"left_delete",
					null,
					"AgAAAC4EAAAAAAAALgQAAAAAAAABAAAAPS0EAAAAAAAALQQAAAAAAAABAAAAIA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAvBAAAAAAAAC8EAAAAAAAAAAAAAAAA8L8"
				],
				[
					72,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAC0EAAAAAAAALgQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAtBAAAAAAAAC0EAAAAAAAAAAAAAAAA8L8"
				],
				[
					73,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAC4EAAAAAAAAMAQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAuBAAAAAAAAC4EAAAAAAAAAAAAAAAA8L8"
				],
				[
					74,
					1,
					"insert_snippet",
					{
						"contents": " $0 "
					},
					"AQAAAC8EAAAAAAAAMQQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAvBAAAAAAAAC8EAAAAAAAAAAAAAAAA8L8"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": " )"
					},
					"AgAAADAEAAAAAAAAMQQAAAAAAAAAAAAAMQQAAAAAAAAyBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAwBAAAAAAAADAEAAAAAAAAAAAAAAAA8L8"
				],
				[
					76,
					2,
					"right_delete",
					null,
					"AgAAADIEAAAAAAAAMgQAAAAAAAABAAAAIDIEAAAAAAAAMgQAAAAAAAABAAAAKQ",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAyBAAAAAAAADIEAAAAAAAAAAAAAAAA8L8"
				],
				[
					77,
					1,
					"insert",
					{
						"characters": "\ndeclare"
					},
					"CAAAADIEAAAAAAAAMwQAAAAAAAAAAAAAMwQAAAAAAAA0BAAAAAAAAAAAAAA0BAAAAAAAADUEAAAAAAAAAAAAADUEAAAAAAAANgQAAAAAAAAAAAAANgQAAAAAAAA3BAAAAAAAAAAAAAA3BAAAAAAAADgEAAAAAAAAAAAAADgEAAAAAAAAOQQAAAAAAAAAAAAAOQQAAAAAAAA6BAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAyBAAAAAAAADIEAAAAAAAAAAAAAAAA8L8"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": " -a"
					},
					"AwAAADoEAAAAAAAAOwQAAAAAAAAAAAAAOwQAAAAAAAA8BAAAAAAAAAAAAAA8BAAAAAAAAD0EAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA6BAAAAAAAADoEAAAAAAAAAAAAAAAA8L8"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": " IN_ICLO"
					},
					"CAAAAD0EAAAAAAAAPgQAAAAAAAAAAAAAPgQAAAAAAAA/BAAAAAAAAAAAAAA/BAAAAAAAAEAEAAAAAAAAAAAAAEAEAAAAAAAAQQQAAAAAAAAAAAAAQQQAAAAAAABCBAAAAAAAAAAAAABCBAAAAAAAAEMEAAAAAAAAAAAAAEMEAAAAAAAARAQAAAAAAAAAAAAARAQAAAAAAABFBAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA9BAAAAAAAAD0EAAAAAAAAAAAAAAAA8L8"
				],
				[
					80,
					1,
					"insert",
					{
						"characters": "UD="
					},
					"AwAAAEUEAAAAAAAARgQAAAAAAAAAAAAARgQAAAAAAABHBAAAAAAAAAAAAABHBAAAAAAAAEgEAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABFBAAAAAAAAEUEAAAAAAAAAAAAAAAA8L8"
				],
				[
					81,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEgEAAAAAAAASgQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABIBAAAAAAAAEgEAAAAAAAAAAAAAAAA8L8"
				],
				[
					82,
					1,
					"insert_snippet",
					{
						"contents": " $0 "
					},
					"AQAAAEkEAAAAAAAASwQAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABJBAAAAAAAAEkEAAAAAAAAAAAAAAAA8L8"
				],
				[
					118,
					1,
					"cut",
					null,
					"AQAAANACAAAAAAAA0AIAAAAAAAADAAAAZGV2",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADQAgAAAAAAANMCAAAAAAAAAAAAAAAA8L8"
				],
				[
					119,
					1,
					"left_delete",
					null,
					"AQAAAM8CAAAAAAAAzwIAAAAAAAABAAAALA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADQAgAAAAAAANACAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "/Users/rmei/.eyrie-setuprc",
			"settings":
			{
				"buffer_size": 23,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"insert",
					{
						"characters": "RC_LINKED"
					},
					"CQAAAKAAAAAAAAAAoQAAAAAAAAAAAAAAoQAAAAAAAACiAAAAAAAAAAAAAACiAAAAAAAAAKMAAAAAAAAAAAAAAKMAAAAAAAAApAAAAAAAAAAAAAAApAAAAAAAAAClAAAAAAAAAAAAAAClAAAAAAAAAKYAAAAAAAAAAAAAAKYAAAAAAAAApwAAAAAAAAAAAAAApwAAAAAAAACoAAAAAAAAAAAAAACoAAAAAAAAAKkAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACgAAAAAAAAAKAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": "+="
					},
					"AgAAAKkAAAAAAAAAqgAAAAAAAAAAAAAAqgAAAAAAAACrAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACpAAAAAAAAAKkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					7,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKsAAAAAAAAArQAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACrAAAAAAAAAKsAAAAAAAAAAAAAAAAA8L8"
				],
				[
					8,
					1,
					"insert_snippet",
					{
						"contents": " $0 "
					},
					"AQAAAKwAAAAAAAAArgAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACsAAAAAAAAAKwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					9,
					1,
					"paste",
					null,
					"AQAAAK0AAAAAAAAAsAAAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACtAAAAAAAAAK0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					21,
					1,
					"cut",
					null,
					"AQAAABgAAAAAAAAAGAAAAAAAAACbAAAAY2FzZSAiJChyZWFsaG9zdG5hbWUpIiBpbgogICAgKCouc2FsZXNmb3JjZS4qKSBERVRFQ1RFRF9TSVRFPXNmZGMgOzsKICAgIChpcC0qKSBERVRFQ1RFRF9TSVRFPWVjMiA7OwogICAgKCopIERFVEVDVEVEX1NJVEU9bWVpIDs7CmVzYWMKClJDX0xJTktFRCs9KCBkZXYgKQo",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACzAAAAAAAAABgAAAAAAAAAAAAAAAAAAAA"
				],
				[
					22,
					1,
					"left_delete",
					null,
					"AQAAABcAAAAAAAAAFwAAAAAAAAABAAAACg",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAYAAAAAAAAABgAAAAAAAAAAAAAAAAA8L8"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"Pack",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 101.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/rmei/Dropbox/usr",
		"/Users/rmei/Dropbox/usr/etc",
		"/Users/rmei/scrub",
		"/Users/rmei/scrub/etc",
		"/Users/rmei/scrub/home"
	],
	"file_history":
	[
		"/Users/rmei/Dropbox/usr/sbin/render_sh.pl",
		"/Users/rmei/Dropbox/usr/share/shlib/shlib.bash",
		"/Users/rmei/Dropbox/usr/share/shlib/shlib-utils.bash",
		"/Users/rmei/Dropbox/usr/share/shlib/shlib-linesets.bash",
		"/Users/rmei/Dropbox/usr/share/shlib/shlib-common.bash",
		"/Users/rmei/Dropbox/usr/share/shlib/shlib-utils-shared.bash",
		"/Users/rmei/Dropbox/usr/etc/bash_profile",
		"/Users/rmei/usr/local/etc/bash_completion",
		"/Users/rmei/Dropbox/usr/etc/profile",
		"/Users/rmei/Dropbox/usr/etc/devrc",
		"/Users/rmei/Dropbox/usr/darwin/etc/homebrew-base",
		"/Users/rmei/scrub/bin/fromto",
		"/Users/rmei/scrub/bin/render_sh.pl",
		"/Users/rmei/Dropbox/usr/darwin/ventura/lib/perl5/_pre-apple-silicon_migration_darwin-thread-multi-2level/auto/Unicode/UTF8/UTF8.bundle",
		"/Users/rmei/Dropbox/usr/bin/buildlogmatch",
		"/Users/rmei/Dropbox/usr/darwin/sbin/setup-darwin.bash",
		"/Users/rmei/Dropbox/usr/.gitignore",
		"/Users/rmei/Dropbox/usr/share/shlib/shlib-switch.bash",
		"/Users/rmei/Dropbox/usr/share/shlib/shlib-fn.bash",
		"/Users/rmei/Dropbox/usr/share/shlib/shlib-tools.bash",
		"/Users/rmei/Dropbox/usr/etc/profile.d/paths.sh",
		"/Users/rmei/Dropbox/usr/share/shlib/shlib-basic-cli.bash",
		"/Users/rmei/Dropbox/usr/share/shlib/test.bash",
		"/Users/rmei/scrub/etc/bashrc.sh",
		"/Users/rmei/Dropbox/usr/etc/bashrc",
		"/Users/rmei/Dropbox/usr/etc/profile.d/canary.sh",
		"/Users/rmei/Documents/Paradox Interactive/CK3 character images/macShannon-dynasty2.json",
		"/Users/rmei/Documents/Paradox Interactive/CK3 character images/Thomond_macShannon.json",
		"/Users/rmei/Documents/Paradox Interactive/CK3 character images/macShannon-dynasty.json",
		"/Users/rmei/Dropbox/usr/darwin/etc/profile",
		"/Users/rmei/Library/CloudStorage/Dropbox/usr/etc/bashrc",
		"/Users/rmei/Library/CloudStorage/Dropbox/usr/etc/bash_profile",
		"/Users/rmei/Drive/usr/.gitignore",
		"/Users/rmei/Drive/usr/sfdc/sbin/setup-sfdc.bash",
		"/Users/rmei/Dropbox/usr/debian/sbin/setup-debian.bash",
		"/Users/rmei/usr/sfdc/bin/[dnsfix:sleep]",
		"/Users/rmei/Drive/usr/sfdc/bin/dnsfix",
		"/Users/rmei/usr/lib/perl5/local/lib/Eyrie.pm",
		"/Users/rmei/Dropbox/usr/etc/bazelrc",
		"/Users/rmei/usr/etc/bashrc",
		"/Users/rmei/Dropbox/usr/sbin/setup-eyrie.bash",
		"/Users/rmei/Dropbox/usr/sbin/setup.config",
		"/Users/rmei/Dropbox/usr/sbin/hosts-update.pl",
		"/Users/rmei/Dropbox/usr/bin/sloccount-tweaked",
		"/Users/rmei/Dropbox/usr/bin/sloccount",
		"/Users/rmei/Drive/usr/sfdc/etc/bazelrc",
		"/Users/rmei/usr/share/shlib/.gitignore",
		"/Users/rmei/Drive/usr/sfdc/share/shlib/sitemacros.bash",
		"/Users/rmei/Dropbox/usr-personal/share/shlib/shlib-basic-cli.bash",
		"/Users/rmei/Dropbox/usr-personal/share/shlib/shlib-tools.bash",
		"/Users/rmei/Dropbox/usr-personal/debian/sbin/setup-debian.bash",
		"/Users/rmei/Dropbox/usr-personal/darwin/sbin/setup-darwin.bash",
		"/Users/rmei/usr/site/share/shlib/sitemacros.bash",
		"/Users/rmei/usr/local/share/shlib/saved_functions.bash",
		"/Users/rmei/blt/app/main/buildrefs-other",
		"/Users/rmei/Dropbox/usr-personal/share/shlib/shlib.bash",
		"/Users/rmei/blt/app/main/buildrefs2.txt",
		"/Users/rmei/Dropbox/usr-personal/darwin/bin/",
		"/Users/rmei/tmp.txt",
		"/Users/rmei/usr/local/share/shlib/saved_functions.bash-wsl3",
		"/Users/rmei/Dropbox/usr-personal/share/shlib/so_readlink.sh",
		"/Users/rmei/Dropbox/usr-personal/sbin/eyrie-setup.sublime-project",
		"/Users/rmei/Dropbox/usr-personal/home/clutter/wikiiconcategoryplan.txt",
		"/Users/rmei/Dropbox/usr-personal/sbin/setup.config",
		"/Users/rmei/Dropbox/usr-personal/home/ddcal.html",
		"/Users/rmei/Drive/usr/sfdc/etc/hosts",
		"/Users/rmei/Dropbox/usr-personal/etc/hosts",
		"/Users/rmei/Dropbox/usr-personal/home/ddc2csv.pl",
		"/Users/rmei/Dropbox/usr-personal/home/ddc.csv",
		"/Users/rmei/Downloads/Untitled spreadsheet - ddc.csv",
		"/Users/rmei/Dropbox/usr-personal/home/ddcal2csv.pl",
		"/Users/rmei/Dropbox/usr-personal/sbin/hosts-update.pl",
		"/Users/rmei/Dropbox/usr-personal/bin/update_line_numbers.pl",
		"/Users/rmei/Dropbox/usr-personal/home/kosmos.log",
		"/Users/rmei/nwn.patch",
		"/Users/rmei/Library/Mobile Documents/M6HJR9W95L~com~textasticapp~textastic/Documents/magehands/Buffer.wiki",
		"/Users/rmei/Dropbox/usr-personal/bin/fragmentbz2.pl",
		"/Users/rmei/Dropbox/usr-personal/bin/reconstitutebz2json.sh",
		"/Users/rmei/git/new-ui-tier-module/pom.xml",
		"/Users/rmei/blt/app/main/core/build/build-maven.xml",
		"/Users/rmei/blt/app/main/core/build/build-config-init-modules.xml",
		"/Users/rmei/blt/app/main/core/.mvn/trellis/jetty-rules.yaml",
		"/Users/rmei/blt/app/main/core/.mvn/trellis/testframework-rules.yaml",
		"/Users/rmei/blt/app/main/core/build/ant",
		"/Users/rmei/blt/app/main/core/build/build-test.xml"
	],
	"find":
	{
		"height": 24.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"rmei",
			"rmei-..m\\S+   D",
			"rmei-\\S+ +\"",
			"rmei-..m\\S+ +\"",
			"rmei-..m\\S+   D",
			"rmei-w\\S+   D",
			"rmei-w(?=\\S)",
			"rmei-w\\S+ +\"",
			"dev",
			"rmei-w\\S+ +\"",
			"rmei-\\S+   Darwin",
			"rmei-\\S+   Linux",
			"rmei-\\S+   Darwin",
			"rmei",
			"debbox",
			"\\.mei   +(?=Darwin)",
			"mei                     ",
			"rmei-wsm6?\\.internal\\.salesforce\\.com",
			"rmei-ltm.internal.salesforce.com",
			"rmei-wsl3 ",
			"rmei",
			"(?<=\\s)// ",
			"// ",
			"(\\+\\+neighbors;)\\n( *( {4}))(sb\\.append\\(neighbors\\);)\\n",
			"(\\+\\+neighbors;)\\n(( *) {4})(sb\\.append\\(neighbors\\);)\\n",
			"sb.add",
			"Cast (\\d+) ([^\\t]+)\\t",
			"\\t-1500",
			"coin",
			"^-",
			"gem",
			"(?=gem\\tpremier draft)",
			"premier\\tdraft",
			" ",
			",\\n",
			",",
			" ",
			":",
			":.+",
			"\\n+",
			"\\n\\n",
			":",
			"group",
			"~/usr",
			":",
			"/usr",
			"USR_LOCAL_DIR_GROUP",
			"newargs",
			"X",
			" ",
			"([05])$",
			" Period ",
			"RC_LINKED",
			"sleep",
			"primary",
			"LOCAL_SITE",
			"DEBUG",
			"\\.root",
			"\\$d",
			"echo ",
			"arch",
			"DROPBOX",
			"arch",
			"(\\bHprofSender\\b|\\bCheckPLSQLUserCount\\b|\\bHprofReader\\b|\\bJTop\\b|\\bExecSqlTarget\\b|\\bFindFailedTests\\b|\\bTopReviewers\\b|\\bP4FindNone\\b|\\bP4Warehouse\\b|\\bMoveChangelist\\b|\\bFilesWithMostCheckins\\b|\\bStackBlame\\b|\\bHeapdumpScrubber\\b|\\bNetworkLogReceiver\\b|\\bLogMiner\\b|\\bP4Client\\b)",
			"(\\bHttpFormPostRequest\\b|\\bHprofSender\\b|\\bCheckPLSQLUserCount\\b|\\bClassDump\\b|\\bInstanceDump\\b|\\bArrayDump\\b|\\bHprofReader\\b|\\bHprofWriter\\b|\\bLoadClassRecord\\b|\\bUTF8Record\\b|\\bHprofScrubber\\b|\\bJTop\\b|\\bExecSqlTarget\\b|\\bFindFailedTests\\b|\\bNullMain\\b|\\bTopReviewers\\b|\\bP4FindNone\\b|\\bP4Warehouse\\b|\\bMoveChangelist\\b|\\bFilesWithMostCheckins\\b|\\bStackBlame\\b|\\bHprofReader\\b|\\bHprofWriter\\b|\\bHeapdumpScrubber\\b|\\bNetworkLogReceiver\\b|\\bLogMiner\\b|\\bP4Client\\b)",
			"class (\\bHttpFormPostRequest\\b|\\bHprofSender\\b|\\bCheckPLSQLUserCount\\b|\\bClassDump\\b|\\bInstanceDump\\b|\\bArrayDump\\b|\\bHprofReader\\b|\\bHprofWriter\\b|\\bLoadClassRecord\\b|\\bUTF8Record\\b|\\bHprofScrubber\\b|\\bJTop\\b|\\bExecSqlTarget\\b|\\bFindFailedTests\\b|\\bNullMain\\b|\\bTopReviewers\\b|\\bP4FindNone\\b|\\bP4Warehouse\\b|\\bMoveChangelist\\b|\\bFilesWithMostCheckins\\b|\\bStackBlame\\b|\\bHprofReader\\b|\\bHprofWriter\\b|\\bHeapdumpScrubber\\b|\\bNetworkLogReceiver\\b|\\bLogMiner\\b|\\bP4Client\\b|\\bPerforceUtil\\b|\\bPerforceJ\\b)",
			"lines",
			"linenos",
			"lines",
			"join",
			"END_PERL",
			"^",
			"^\\s+echo \"|\"$",
			";$",
			"DROPBOX",
			"DROPBOX_HOME",
			"VAR",
			"relativize",
			"src",
			"NOOK",
			"subdir",
			"make_dir",
			"USE_FUNCNAME",
			"TF_BASE",
			"trap",
			"TILDE",
			"LOCAL_SITE",
			"CONCRETE",
			"DROPBOX_USR",
			"DRIVE_USR",
			"$T",
			"rowid",
			"lines",
			"h",
			"host",
			" tab",
			"tabs",
			"tab",
			"$host",
			"host",
			"load",
			"write",
			"process",
			"^(\\s+)(m%.+?%)\\n",
			"(m%.+?%)\\n",
			"qr%",
			"collapse show\"(?: style=\"\")?>",
			"collapse show\" style=\"\">",
			"collapse show\" style=\"\"",
			"collapse show\" style=\"\">\\n",
			"collapse show\" style=\"\"",
			"(<div[^>]*>|</div>)",
			"\\n\\n+",
			"(<div[^>]*>|</div>)",
			"(<div[^>]*>)",
			"mb-3",
			"thead",
			"tbody",
			"</td>",
			"backup_file",
			"file",
			"ctx",
			"wk",
			"tmpname",
			"tmpdir",
			"backup",
			"^",
			".. \\(\\d+ links?\\)$"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"rachel",
			"rachels-mac.mei   D",
			"rachels-mac.mei                                 \"",
			"rachels-mac.mei   D",
			"wk",
			"rachels-mac.mei                              \"",
			"rachels-mac.mei   Darwin",
			"debbox.mei   Linux",
			"rachels-mac.mei   Darwin",
			"debbox.mei   ",
			".mei   ",
			"rachels-mac.mei                 ",
			"debbox ",
			"rachel",
			"/*-*/ ",
			"/**/",
			"\\{\\n\\2\\3\\1\\n\\2\\3sb\\.append\\(1);\\n\\2} else { sb.append(0); }\\n",
			"\\{\\n\\2\\1\\n\\2sb\\.append\\(1);\\n\\3} else { sb.append(0); }\\n",
			"sb.append",
			"Cast \\2\\t\\1\\t",
			"-1500\\t",
			"\\t\\tcoin",
			"\\t-",
			"\\tgem",
			"-1500\\t",
			"premier draft",
			"\\t",
			", ",
			",\\n",
			"\\t",
			"",
			"\\n",
			"~/eyrie",
			"\\n ",
			"X",
			"\\t",
			"\\1\\t\\t",
			"\\t",
			"\\t\\t",
			"",
			"ANCHOR",
			"$1if ($2) {\\n$1    \\n$1}\\n",
			"if ($1)\\n",
			"m%",
			"\\n$1\\n\\t",
			"\\n",
			"\\n$1\\n",
			"$1\\n\\t",
			"Module:",
			"",
			"|",
			"",
			"\\n",
			"",
			"Module:",
			" $1",
			"|",
			"\\\\$1",
			"",
			"\\n",
			"Deceased player characters",
			"Deceased non-player characters",
			"Deceased people",
			"",
			"\\1\\4\\3\\2",
			"\\1\\2",
			"\\1, \\2",
			"\\1\\2%\\4\n | frame = \\3",
			"\\1, \\2",
			"\\1\\2%\\4\n | frame = \\3",
			"\\1\\2",
			"\\1\\2%\\4\n | style = \\3",
			"\\1\\2",
			"\\1\\2%\\4\n | style = \\3",
			"",
			"\\1, \\2",
			" ",
			"\\1\\2%\\4\n | style = \\3",
			"",
			" ",
			"\\1, \\2",
			" \\1, \\2",
			" ",
			"\\1\\2%\\4\n | palette = \\3",
			"\\n{{lore icon\n | portrays = \\1\n | qualifiers = \\2\n | categories = \n}}\n",
			"",
			"\\n",
			"[[\\1|120px]]",
			"",
			"\\1\\2\\1",
			"=",
			"[[wikimediacommons:\\1]]",
			"[[\\1|120px]]"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "setup-eyrie.bash",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10728,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/ShellScript/Bash.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/Users/rmei/Dropbox/usr/etc/gitconfig",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1405,
						"regions":
						{
						},
						"selection":
						[
							[
								1405,
								1405
							]
						],
						"settings":
						{
							"syntax": "Packages/Git Formats/Git Config.sublime-syntax",
							"tab_size": 8,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/Users/rmei/scrub/etc/bazelrc",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 256,
						"regions":
						{
						},
						"selection":
						[
							[
								256,
								256
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/Users/rmei/scrub/etc/bash_profile",
					"selected": true,
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 1803,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/ShellScript/Bash.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/Users/rmei/Dropbox/usr/etc/bazelrc",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 348,
						"regions":
						{
						},
						"selection":
						[
							[
								206,
								206
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "setup-eyrie",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10728,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/ShellScript/Bash.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4650.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "setup.config",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1097,
						"regions":
						{
						},
						"selection":
						[
							[
								719,
								719
							]
						],
						"settings":
						{
							"syntax": "Packages/ShellScript/Bash.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "/Users/rmei/.eyrie-setuprc",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 23,
						"regions":
						{
						},
						"selection":
						[
							[
								23,
								23
							]
						],
						"settings":
						{
							"syntax": "Packages/ShellScript/Bash.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 34.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"output.{p.PML}_panel":
	{
		"height": 96.0
	},
	"pinned_build_system": "",
	"project": "Eyrie-setup.sublime-project",
	"replace":
	{
		"height": 68.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 351.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
